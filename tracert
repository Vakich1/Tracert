from scapy.all import IP, ICMP, sr1
import sys
import time
import socket


def calculate_checksum(packet):
    if len(packet) % 2 == 1:
        packet += b'\x00'
    checksum = 0
    for i in range(0, len(packet), 2):
        word = (packet[i] << 8) + packet[i + 1]
        checksum += word

    checksum = (checksum & 0xFFFF) + (checksum >> 16)
    checksum = ~checksum & 0xFFFF

    return checksum


def tracert(destination, max_hops=30, timeout=1, num_packets=3):
    print(f'Tracing route to {destination}')

    try:
        destination_ip = socket.gethostbyname(destination)  # Разрешаем доменное имя в IP
    except socket.gaierror:
        print(f"Error: Cannot resolve {destination}")
        sys.exit(1)

    for ttl in range(1, max_hops + 1):
        hop_result = []
        reached_destination = False

        for _ in range(num_packets):
            pkt = IP(dst=destination, ttl=ttl) / ICMP()
            pkt[ICMP].chksum = 0
            pkt[ICMP].chksum = calculate_checksum(bytes(pkt[ICMP]))

            start_time = time.time()
            reply = sr1(pkt, verbose=0, timeout=timeout)
            end_time = time.time()

            if reply is None:
                hop_result.append('*')
            else:
                response_time = round((end_time - start_time) * 1000, 2)
                hop_result.append(f'{response_time} ms')

        last_reply = reply.src if reply is not None else '*'

        try:
            host = socket.gethostbyaddr(last_reply)[0] if last_reply != '*' else last_reply
        except (socket.herror, socket.gaierror):
            host = last_reply  # Если не удалось разрешить IP, оставляем IP-адрес

        # Проверка: дошли ли мы до целевого узла
        if reply is not None and (reply.src == destination_ip or host == destination):
            reached_destination = True

        if host != last_reply:
            print(f'{ttl}  ' + '  '.join(hop_result) + f'  {last_reply} ({host})')
        else:
            print(f'{ttl}  ' + '  '.join(hop_result) + f'  {last_reply}')

        if reached_destination:
            if destination != destination_ip:
                print(f"Destination reached: {destination} ({destination_ip})")
            else:
                print(f"Destination reached: {destination}")
            break


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Usage: {sys.argv[0]} <destination>")
        sys.exit(1)

    tracert(sys.argv[1])
